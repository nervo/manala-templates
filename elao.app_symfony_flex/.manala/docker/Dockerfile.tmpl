FROM debian:stretch-slim

LABEL maintainer="Elao <contact@elao.com>"

##########
# System #
##########

# The 'container' environment variable tells systemd that it's running inside a
# Docker container environment.
# It's also internally used for checking we're running inside a container too.
ENV container docker

RUN \
    # Disable irrelevants apt-key warnings
    export APT_KEY_DONT_WARN_ON_DANGEROUS_USAGE="1" \
    # Disable all debian user interaction
    && export DEBIAN_FRONTEND="noninteractive" \
    && apt-get update \
    && apt-get install -y --no-install-recommends \
        bash bash-completion \
        apt-utils apt-transport-https \
        ca-certificates \
        procps \
        curl \
        make \
        less \
        vim-tiny \
        gnupg2 dirmngr \
        openssh-client \
        sudo \
        git \
        rsync \
    # Srv
    && mkdir --parents /srv \
    && chmod 777 /srv \
    # User
    && adduser --disabled-password --gecos "" app \
    # Bash
    && sed -i 's/^#force_color_prompt=yes/force_color_prompt=yes/' /home/app/.bashrc \
    && echo "\
export HISTFILE=/srv/.cache/.bash_history\n" >> /home/app/.bashrc \
    # Sudo
    && echo "app ALL=(ALL) NOPASSWD:ALL" > /etc/sudoers.d/app \
    # Ansible
    && echo "deb http://ppa.launchpad.net/ansible/ansible/ubuntu xenial main" > /etc/apt/sources.list.d/ansible.list \
    && apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 93C4A3FD7BB9C367 \
    && apt-get update \
    && apt-get install -y --no-install-recommends \
        ansible

COPY etc/ssh_config  /etc/ssh/ssh_config
COPY etc/ansible.cfg /etc/ansible/ansible.cfg

WORKDIR /srv/app

{{ if .system.php -}}
#######
# Php #
#######

RUN \
    echo "deb https://packages.sury.org/php/ stretch main" > /etc/apt/sources.list.d/php.list \
    && curl -sSL https://packages.sury.org/php/apt.gpg --output /etc/apt/trusted.gpg.d/php.gpg \
    # Disable irrelevants apt-key warnings
    && export APT_KEY_DONT_WARN_ON_DANGEROUS_USAGE="1" \
    # Disable all debian user interaction
    && export DEBIAN_FRONTEND="noninteractive" \
    && apt-get update \
    && apt-get install -y --no-install-recommends \
        php{{ .system.php.version }}-cli \
        php{{ .system.php.version }}-intl \
        php{{ .system.php.version }}-curl \
        php{{ .system.php.version }}-mbstring \
        php{{ .system.php.version }}-xml \
        php{{ .system.php.version }}-mysql \
        php{{ .system.php.version }}-zip \
    # Composer
    && apt-get install -y --no-install-recommends \
        unzip \
    && curl -sSL https://getcomposer.org/installer | php -- --install-dir /usr/local/bin --filename composer

ENV COMPOSER_CACHE_DIR=/srv/.cache/composer
{{- end }}

{{ if .system.nodejs -}}
##########
# NodeJs #
##########

RUN \
    echo "deb https://deb.nodesource.com/node_{{ .system.nodejs.version }}.x stretch main" > /etc/apt/sources.list.d/node.list \
    && curl -sSL https://deb.nodesource.com/gpgkey/nodesource.gpg.key \
        | apt-key add - \
    && echo "deb https://dl.yarnpkg.com/debian/ stable main" > /etc/apt/sources.list.d/yarn.list \
    && curl -sSL https://dl.yarnpkg.com/debian/pubkey.gpg \
        | apt-key add - \
    # Disable irrelevants apt-key warnings
    && export APT_KEY_DONT_WARN_ON_DANGEROUS_USAGE="1" \
    # Disable all debian user interaction
    && export DEBIAN_FRONTEND="noninteractive" \
    && apt-get update \
    && apt-get install -y --no-install-recommends \
        nodejs \
        yarn

ENV NPM_CONFIG_CACHE=/srv/.cache/npm \
    YARN_CACHE_FOLDER=/srv/.cache/yarn
{{- end }}

USER app
