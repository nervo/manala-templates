{{- define "integration" -}}
  {{- $integration := .integration -}}
  {{- $indent := .indent -}}
  {{- range $task := $integration.tasks }}
    stage('{{ template "task_label" $task }}') {
      {{- if $task.tasks }}
      stages {
        {{- template "integration" dict "integration" $task "indent" (add $indent 2) }}
      }
      {{- end }}
    }
  {{- end }}
{{- end -}}

{{- define "task_label" -}}
  {{- if .label -}}
    {{- .label -}}
  {{- else if .app -}}
    {{- .app | title -}}
  {{- else if and (.shell) (regexMatch "^make .+@.+$" (default "" .shell)) -}}
    {{- (regexReplaceAll "^make (.+)@.+$" .shell "${1}") | replace "." " - " | title -}}
  {{- else -}}
    Task
  {{- end }}
{{- end -}}

#!/usr/bin/env groovy

pipeline {
  agent {
    dockerfile {
      dir '.manala/docker'
    }
  }
  stages {
    {{- if not .integration.tasks }}
    stage('¯\\_(ツ)_/¯') {
      steps {
        echo 'Testing is doubting...'
      }
    }
    {{- else }}
    {{- template "integration" dict "integration" .integration "indent" 6 }}

    {{- range $stage := .integration.stages }}
    stage('{{ $stage.label }}') {
      parallel {
        {{- range $track := $stage.tracks }}
        stage('{{ default "App" (default ((default "" $track.app) | title) $track.label) }}') {
          stages {
            {{- range $step := $track.steps }}
            stage('{{ $step.label }}') {
              steps {
                {{- if $track.app }}
                dir('{{ default $track.app $track.app_dir }}') {
                  {{- range $task := $step.tasks }}
                  sh '{{ $task }}'
                  {{- end }}
                }
                {{- else }}
                {{- range $task := $step.tasks }}
                sh '{{ $task }}'
                {{- end }}
                {{- end }}
              }
            }
            {{- end }}
          }
        }
        {{- end }}
      }
    }
    {{- end }}
  }
  post {
    always {
      junit testResults: '**/report/junit/*.xml', allowEmptyResults: true
    }
  {{- end }}
  }
}
